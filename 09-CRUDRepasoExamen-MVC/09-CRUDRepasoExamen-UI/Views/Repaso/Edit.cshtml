@model _09_CRUDRepasoExamen_Entidades.clsPersonaConNombreDeDepartamento

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>
<body>
	@using (Html.BeginForm())
	{
		@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4>Cambiar Telefono</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })

		<div hidden class="form-group">
			@Html.LabelFor(model => model.idPersona, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.idPersona, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.idPersona, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			Nombre:
			<br />
			<div class="col-md-10">
				@Html.DisplayFor(model => model.nombre)
				@Html.HiddenFor(model => model.nombre)
			</div>
		</div>
		<br />

		<div class="form-group">
			Apellidos:
			<br />
			<div class="col-md-10">
				@Html.DisplayFor(model => model.apellidos)
				@Html.HiddenFor(model => model.apellidos)
			</div>
		</div>
		<br />

		<div class="form-group">
			Departamento:
			<div class="col-md-10">
				@Html.DisplayFor(model => model.nombreDepartamento)
				@Html.HiddenFor(model => model.nombreDepartamento)
			</div>
		</div>
		<br />

		<div hidden class="form-group">
			@Html.LabelFor(model => model.fechNacimiento, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.fechNacimiento, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.fechNacimiento, "", new { @class = "text-danger" })
			</div>
		</div>

		<div hidden class="form-group">
			@Html.LabelFor(model => model.direccion, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.direccion, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.direccion, "", new { @class = "text-danger" })
			</div>
		</div>

		<div hidden class="form-group">
			@Html.LabelFor(model => model.idDepartamento, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.idDepartamento, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.idDepartamento, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			Teléfono:
			<br />
			<div class="col-md-10">
				@Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
			</div>
		</div>
		<br />

		<div>
			@ViewData["EditCorrecto"]
			@ViewData["EditPostError"]
		</div>
		<br />

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Save" class="btn btn-default" />
			</div>
		</div>
	</div>
		<br />
	}

	<p>
		@Html.ActionLink("Back to List", "Index", new { id = Model.idDepartamento })
	</p>
</body>
</html>
